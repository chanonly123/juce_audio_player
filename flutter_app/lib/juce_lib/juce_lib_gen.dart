// AUTO GENERATED FILE, DO NOT EDIT.
//
// Generated by `package:ffigen`.
// ignore_for_file: type=lint
import 'dart:ffi' as ffi;
import 'package:ffi/ffi.dart' as pkg_ffi;

/// Generate c header to dart bindings
class JuceLibGen {
  /// Holds the symbol lookup function.
  final ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
      _lookup;

  /// The symbols are looked up in [dynamicLibrary].
  JuceLibGen(ffi.DynamicLibrary dynamicLibrary)
      : _lookup = dynamicLibrary.lookup;

  /// The symbols are looked up with [lookup].
  JuceLibGen.fromLookup(
      ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
          lookup)
      : _lookup = lookup;

  void juceEnableLogs() {
    return _juceEnableLogs();
  }

  late final _juceEnableLogsPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function()>>('juceEnableLogs');
  late final _juceEnableLogs = _juceEnableLogsPtr.asFunction<void Function()>();

  void juceMessageManagerInit() {
    return _juceMessageManagerInit();
  }

  late final _juceMessageManagerInitPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function()>>(
          'juceMessageManagerInit');
  late final _juceMessageManagerInit =
      _juceMessageManagerInitPtr.asFunction<void Function()>();

  ffi.Pointer<ffi.Void> JuceMixPlayer_init() {
    return _JuceMixPlayer_init();
  }

  late final _JuceMixPlayer_initPtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
          'JuceMixPlayer_init');
  late final _JuceMixPlayer_init =
      _JuceMixPlayer_initPtr.asFunction<ffi.Pointer<ffi.Void> Function()>();

  void JuceMixPlayer_deinit(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _JuceMixPlayer_deinit(
      ptr,
    );
  }

  late final _JuceMixPlayer_deinitPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'JuceMixPlayer_deinit');
  late final _JuceMixPlayer_deinit = _JuceMixPlayer_deinitPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void JuceMixPlayer_play(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _JuceMixPlayer_play(
      ptr,
    );
  }

  late final _JuceMixPlayer_playPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'JuceMixPlayer_play');
  late final _JuceMixPlayer_play =
      _JuceMixPlayer_playPtr.asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void JuceMixPlayer_pause(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _JuceMixPlayer_pause(
      ptr,
    );
  }

  late final _JuceMixPlayer_pausePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'JuceMixPlayer_pause');
  late final _JuceMixPlayer_pause = _JuceMixPlayer_pausePtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>)>();

  void JuceMixPlayer_addItem(
    ffi.Pointer<ffi.Void> ptr,
    ffi.Pointer<ffi.Void> item,
  ) {
    return _JuceMixPlayer_addItem(
      ptr,
      item,
    );
  }

  late final _JuceMixPlayer_addItemPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>>('JuceMixPlayer_addItem');
  late final _JuceMixPlayer_addItem = _JuceMixPlayer_addItemPtr.asFunction<
      void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  ffi.Pointer<ffi.Void> JuceMixItem_init() {
    return _JuceMixItem_init();
  }

  late final _JuceMixItem_initPtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
          'JuceMixItem_init');
  late final _JuceMixItem_init =
      _JuceMixItem_initPtr.asFunction<ffi.Pointer<ffi.Void> Function()>();

  void JuceMixItem_deinit(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _JuceMixItem_deinit(
      ptr,
    );
  }

  late final _JuceMixItem_deinitPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'JuceMixItem_deinit');
  late final _JuceMixItem_deinit =
      _JuceMixItem_deinitPtr.asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void JuceMixItem_setPath(
    ffi.Pointer<ffi.Void> ptr,
    ffi.Pointer<pkg_ffi.Utf8> path,
    double begin,
    double end,
  ) {
    return _JuceMixItem_setPath(
      ptr,
      path,
      begin,
      end,
    );
  }

  late final _JuceMixItem_setPathPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<pkg_ffi.Utf8>,
              ffi.Float, ffi.Float)>>('JuceMixItem_setPath');
  late final _JuceMixItem_setPath = _JuceMixItem_setPathPtr.asFunction<
      void Function(
          ffi.Pointer<ffi.Void>, ffi.Pointer<pkg_ffi.Utf8>, double, double)>();
}
